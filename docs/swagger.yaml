definitions:
  models.Article:
    properties:
      content:
        type: string
      created_by:
        type: string
      created_on:
        type: integer
      desc:
        type: string
      id:
        type: integer
      modified_by:
        type: string
      modified_on:
        type: integer
      state:
        type: integer
      tag:
        $ref: '#/definitions/models.Tag'
        type: object
      tag_id:
        type: integer
      title:
        type: string
    type: object
  models.Tag:
    properties:
      created_by:
        type: string
      created_on:
        type: integer
      id:
        type: integer
      modified_by:
        type: string
      modified_on:
        type: integer
      name:
        type: string
      state:
        type: integer
    type: object
host: localhost:5000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/v1/articles:
    get:
      parameters:
      - description: Name
        in: query
        name: title
        type: string
      - description: State
        in: query
        name: state
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取文章列表
    post:
      parameters:
      - description: Article
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建文章
  /api/v1/articles/{id}:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除文章标签
    get:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取文章详情
  /api/v1/auth:
    get:
      parameters:
      - description: Username
        in: query
        name: username
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 创建token
  /api/v1/tags:
    get:
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: State
        in: query
        name: state
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取多个文章标签
    post:
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 新增文章标签
  /api/v1/tags/{id}:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除文章标签
    put:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ID
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: ModifiedBy
        in: query
        name: modified_by
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 修改文章标签
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
